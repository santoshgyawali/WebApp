@model WebApp.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>
@using (Html.BeginForm("Save", "Customers"))
{ 
    @Html.ValidationSummary(true,"Please enter following errors")
    <div class="form-group">
        @Html.LabelFor(m=>m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class="form-control"})
        @Html.ValidationMessageFor(m=> m.Customer.Name)
     </div>
    
    <div class="form-group">
        <label for="Customer.MembershipTypeId">Membership Type</label>
        @* @Html.LabelFor(m => m.Customer.MembershipTypeId)*@
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

     <div class="form-group">
         <label for="Birthday">Date of Birth</label> @*Changing the birthday to date of birth*@
      @* @Html.LabelFor(m => m.Birthday)*@ 
        @Html.TextBoxFor(m => m.Customer.Birthday, new { @class = "form-control" })
        @Html.ValidationMessageFor(m=>m.Customer.Birthday)
     </div>

    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubsribedToNewsletter) Susbscirbed to Newsletter?
        </label>
    </div>

   
        @Html.HiddenFor( m => m.Customer.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary"> Save </button>

}

@*client side validation*@
@section scripts
{@Scripts.Render("~/bundles/jqueryval")
    }


